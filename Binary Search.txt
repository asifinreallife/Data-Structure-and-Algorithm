#include<stdio.h>
int main(void)
{
    int i,j,s,temp;
    int a1[10];
    printf("Enter the total size of the array: ");
    scanf("%d",&s);
    printf("One by one enter the elements of the array: ");
    for(i=0;i<s;i++)scanf("%d",&a1[i]);
    for(i=1;i<s;i++)
    {
        temp=a1[i];
        j=i-1;
        while((temp<a1[j])&&j>=0)
        {
            a1[j+1]=a1[j];
            j=j-1;
            a1[j+1]=temp;
        }

    }
    printf("After sorting: \n");
    for(i=0;i<s;i++)printf("%d\n",a1[i]);
    return 0;
}

//Binary search with sorting alorithm

#include<stdio.h>
int main(void)
{
    int position,c,n,i,d;
    int sweep,flag;
    int a1[10];
    int search,first,middle,last;
    printf("Enter the number of element you want to insert: ");
    scanf("%d",&n);
    printf("Enter element one by one: ");
    for(i=0;i<n;i++)scanf("%d",&a1[i]);
    for(c=0;c<n;c++)
    {
        flag=0;
        position=c;
            for(d=c+1;d<n;d++)
            {
                if(a1[position]>a1[d])
                {
                    position=d;
                    flag++;
                }
            }
            printf("%d position swapped %d times\n\n",c,flag);
            sweep=a1[position];
            a1[position]=a1[c];
            a1[c]=sweep;
     }
     printf("Selection sorted ascending order: \n");
     for(i=0;i<n;i++)printf("%d\n",a1[i]);
     printf("Enter the number you wish to find in an array: ");
     scanf("%d",&search);
     first=0;
     last=n-1;
     middle=(first+last)/2;
     while(first<=last)
     {
         if(a1[middle]<search)
         {
             first=middle+1;
         }
         else if(a1[middle]==search)
         {
             printf("%d element is found at %d position\n\n",search,middle+1);
             break;
         }
         else
         {
             last=middle-1;
         }
         middle=(first+last)/2;

     }
     if(first>last)printf("%d elements is not found in the list\n\n",search);

     return 0;
}

